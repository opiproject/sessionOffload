name: Linters

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  markdown-lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - name: Run tests
        run: docker run -v $PWD:/workdir ghcr.io/igorshubovych/markdownlint-cli:latest --ignore ./sessionoffload/v2/autogen.md --disable=MD013 "**/*.md"

      # - uses: avto-dev/markdown-lint@v1.5.0
      #   with:
      #     args: './*.md'

  docker-lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dockerfile:
          - ./openoffload/cpp/framework/Dockerfile
          - ./openoffload/cpp/framework/build/Dockerfile
          - ./openoffload/go/client/Dockerfile
          - ./openoffload/go/server/Dockerfile
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: hadolint/hadolint-action@v2.1.0
        with:
          recursive: true
          ignore: DL3041,DL3008,DL3033,DL3002
          dockerfile: ${{ matrix.dockerfile }}

  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: azohra/shell-linter@v0.6.0

  YAMLlint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: ibiqlik/action-yamllint@v3
        with:
          file_or_dir: openoffload sessionoffload
          config_data: "{extends: default, rules: {line-length: disable}}"

  golangci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
      - uses: golangci/golangci-lint-action@v3
        with:
          working-directory: openoffload/go/client
      - uses: golangci/golangci-lint-action@v3
        with:
          working-directory: openoffload/go/server
